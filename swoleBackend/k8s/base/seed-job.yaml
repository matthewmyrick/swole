apiVersion: batch/v1
kind: Job
metadata:
  name: swole-seed-job
  namespace: swole
  labels:
    app.kubernetes.io/name: swole
    app.kubernetes.io/component: seed
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: swole
        app.kubernetes.io/component: seed
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-postgres
          image: postgres:15
          command:
            - /bin/sh
            - -c
            - |
              echo "üîç Waiting for PostgreSQL to be ready..."
              until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; do
                echo "‚è≥ PostgreSQL is unavailable - sleeping"
                sleep 2
              done
              echo "‚úÖ PostgreSQL is ready"
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
      containers:
        - name: seed
          image: swole-api:latest
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - |
              echo "üå± Starting database seeding..."
              # Run the Go binary with seed flag if available, or custom seeding logic
              ./main --seed || echo "Seeding completed via application startup"
          env:
            - name: DATABASE_URL
              value: "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable"
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            capabilities:
              drop:
                - ALL