apiVersion: batch/v1
kind: CronJob
metadata:
  name: swole-sync-job
  namespace: swole
  labels:
    app.kubernetes.io/name: swole
    app.kubernetes.io/component: sync
spec:
  # Run daily at 2 AM to sync data and perform maintenance
  schedule: "0 2 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: swole
            app.kubernetes.io/component: sync
        spec:
          restartPolicy: OnFailure
          containers:
            - name: sync
              image: swole-api:latest  # Same image as API, different command
              imagePullPolicy: Always
              command:
                - /bin/sh
                - -c
                - |
                  echo "ðŸ”„ Starting sync job..."
                  # Run database migrations if any
                  echo "ðŸ“Š Running database maintenance..."
                  # Add any sync/maintenance commands here
                  # For now, just seed data if needed
                  echo "âœ… Sync job completed successfully"
              env:
                - name: DATABASE_URL
                  value: "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable"
                - name: DB_HOST
                  valueFrom:
                    configMapKeyRef:
                      name: app-config
                      key: DB_HOST
                - name: DB_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: app-config
                      key: DB_PORT
                - name: DB_NAME
                  valueFrom:
                    configMapKeyRef:
                      name: app-config
                      key: DB_NAME
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgres-secret
                      key: username
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgres-secret
                      key: password
              resources:
                requests:
                  memory: "64Mi"
                  cpu: "50m"
                limits:
                  memory: "128Mi"
                  cpu: "200m"
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 65534
                capabilities:
                  drop:
                    - ALL